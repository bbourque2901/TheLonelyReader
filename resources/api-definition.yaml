openapi: 3.0.0
info:
  title: Music Playlist Service
  description: "This is the API definition for the Music Playlist Service."
  version: 1.0.0

servers:
  - url: http://localhost:3000

tags:
  - name: Booklists
    description: Create, view, and update booklists

  - name: Book
    description: View and add songs to booklists

paths:

  /booklists/search:
    get:
      tags:
        - Booklists
      parameters:
        - name: q
          in: query
          description: Search term (name or tag)
          required: true
          schema:
            type: array
            items:
              type: string
      summary: Search for a booklist (SearchBooklistsLambda)
      responses:
        "200":
          description: A playlist object
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  name:
                    type: string
                  customerId:
                    type: string
                  songCount:
                    type: integer
                  tags:
                    type: array
                    items:
                      type: string

  /playlists:
    post:
      tags:
        - Playlists
      summary: Create a new playlist (CreatePlaylistLambda)
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                customerId:
                  type: string
                tags:
                  type: array
                  items:
                    type: string
      responses:
        "200":
          description: A playlist object
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  name:
                    type: string
                  customerId:
                    type: string
                  songCount:
                    type: integer
                  tags:
                    type: array
                    items:
                      type: string

  /playlists/{id}:
    get:
      tags:
        - Playlists
      summary: Get an existing playlist (GetPlaylistLambda)
      parameters:
        - name: id
          in: path
          description: ID of playlist to retrieve
          required: true
          schema:
            type: string
      responses:
        "200":
          description: PlaylistResponse
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  name:
                    type: string
                  customerId:
                    type: string
                  songCount:
                    type: integer
                  tags:
                    type: array
                    items:
                      type: string
        "500":
          description: "Invalid input parameters"

    put:
      tags:
        - Playlists
      summary: Update the name of an existing playlist (UpdatePlaylistLambda)
      parameters:
        - name: id
          in: path
          description: ID of playlist to retrieve
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: string
                name:
                  type: string
                customerId:
                  type: string

      responses:
        "200":
          description: PlaylistResponse
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  name:
                    type: string
                  customerId:
                    type: string
                  songCount:
                    type: integer
                  tags:
                    type: array
                    items:
                      type: string
        "500":
          description: "Invalid input parameters"

  /playlists/{id}/songs:
    get:
      tags:
        - Books
      summary: Retrieves a list of all songs in a booklist (GetBooklistBooksLambda)
      operationId: getBooks
      parameters:
        - name: id
          in: path
          description: ID of booklist to return
          required: true
          schema:
            type: string
      responses:
        "200":
          description: A playlist object
          content:
            application/json:
              schema:
                type: object
                properties:
                  songList:
                    type: array
                    items:
                      properties:
                        asin:
                          type: string
                        title:
                          type: string
                        album:
                          type: string
                        trackNumber:
                          type: integer

    post:
      tags:
        - Books
      summary: Add a song to a booklist (AddSongToBooklistLambda)
      operationId: addBook
      parameters:
        - name: id
          in: path
          description: ID of booklist to return
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                asin:
                  type: string
                id:
                  type: string

      responses:
        "200":
          description: the book
          content:
            application/json:
              schema:
                type: object
                properties:
                  songList:
                    type: array
                    items:
                      properties:
                        asin:
                          type: string
                        title:
                          type: string
                        author:
                          type: string
                        genre:
                          type: string
                        rating:
                          type: integer
                        comments:
                          type: string
                        currentlyReading:
                          type: boolean
                        percentComplete:
                          type: integer
